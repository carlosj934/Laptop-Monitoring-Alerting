name: Security Scans

on:
  push:
    branches: [ 'master', 'main' ]  # Only run on push to main branches
  pull_request:
    branches: [ '**' ]  # Run on all PRs (this covers feature branch pushes)
  schedule:
    # Run weekly on Mondays at 9am UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  govulncheck:
    name: Go Vulnerability Check
    runs-on: windows-latest  # Needs to compile Windows-specific code
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Run govulncheck
        run: govulncheck ./...

  gosec:
    name: Gosec Security Scanner
    runs-on: windows-latest  # Needs to compile Windows-specific code
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install Gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run Gosec
        run: gosec -fmt sarif -out gosec-results.sarif ./...

      - name: Upload Gosec results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v4
        if: always()
        with:
          sarif_file: gosec-results.sarif

  staticcheck:
    name: StaticCheck Analysis
    runs-on: windows-latest  # Needs to compile Windows-specific code
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

  nancy:
    name: Nancy Dependency Scanner
    runs-on: windows-latest  # Needs to compile Windows-specific code
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Write Go List to file
        run: go list -json -deps ./... > go.list

      - name: Nancy Vulnerability Scan
        uses: sonatype-nexus-community/nancy-github-action@main
        continue-on-error: true
        with:
          nancyCommand: sleuth --loud

  gitleaks:
    name: Gitleaks Secret Scanner
    runs-on: ubuntu-latest  # File-based scan, doesn't need compilation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better secret detection

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_ENABLE_COMMENTS: true

  trivy:
    name: Trivy Vulnerability Scanner
    runs-on: ubuntu-latest  # File-based scan, doesn't need compilation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v4
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  semgrep:
    name: Semgrep Security Analysis
    runs-on: ubuntu-latest  # File-based scan, doesn't need compilation
    container:
      image: semgrep/semgrep
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Semgrep
        run: semgrep scan --config auto --sarif --output semgrep-results.sarif
        continue-on-error: true

      - name: Upload Semgrep results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v4
        if: always()
        with:
          sarif_file: semgrep-results.sarif

  go-tests:
    name: Run Go Tests with Race Detector
    runs-on: windows-latest  # Needs to compile and run Windows-specific tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Run tests with race detector
        run: go test -race -coverprofile=coverage.out ./...

      - name: Upload coverage to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  build:
    name: Build Verification
    runs-on: windows-latest  # Building Windows executable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Build Windows executable
        run: go build -ldflags="-s -w" -o laptop-monitor.exe ./cmd/monitor

      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: laptop-monitor-windows
          path: laptop-monitor.exe

  summary:
    name: Security Scan Summary
    runs-on: ubuntu-latest
    needs: [govulncheck, gosec, staticcheck, nancy, gitleaks, trivy, semgrep, go-tests, build]
    if: always()
    steps:
      - name: Check job results
        run: |
          echo "### Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "âœ… All security scans completed" >> $GITHUB_STEP_SUMMARY
          echo "Check the Security tab for detailed findings" >> $GITHUB_STEP_SUMMARY
